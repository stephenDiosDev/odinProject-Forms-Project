/* Colour scheme variables */
:root {
    --pale-orange: #fffab7;
    --pink: #ec3ab0;
    --light-blue: #46fff1;
    --black: #000000;
    --purple: #8b01c6;
    --dark-blue: #3600b1;
}

@font-face {
    font-family: CyberFont;
    src: url(./fonts/Dirtchunk-0W0AR.otf);
}

body {
    display: flex;
}

.content,
.vanity-bar,
body {
    padding: 0;
    margin: 0;
    height: 100vh;
    max-height: 100vh;
}

.vanity-bar {
    /* border: 3px solid red; */
    width: 40vw;
    position: relative;
    display: flex;
    flex: 0 0 auto;
}

.content {
    border: 3px solid blue;
    width: 60vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    flex: 0 1 auto;
}

.cnt-spacing {
    border: 3px solid rgb(0, 255, 47);
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    width: 100%;
    height: 60%;
}

body {
    display: flex;
    flex-direction: row;
    width: 100%;
    background-color: bisque;
}

.vanity-band {
    font-family: CyberFont;
    color: #FFB845;
    background-color: rgba(0, 0, 0, 0.5);
    position: absolute;
    left: 0;
    top: 10%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#vanity-title {
    font-size: 80px;
}

.vanity-link {
    color: var(--pale-orange);
    position: absolute;
    left: 40%;
    top: 95%;
    align-content: center;
}

a:link {
    /* unvisited link */
    color: var(--light-blue);
}

a:visited {
    /* visited link */
    color: var(--pale-orange);
}

#vanity-video {
    max-width: 100%;
    min-width: 100%;
    min-height: 100%;
    object-fit: fill;
}

#logo {
    width: 120px;
    height: 120px;
    padding: 15px;
    opacity: 0.75;
}

.vanity-band > h1 {
    padding: 0;
    margin: 0;
    padding-left: 60px;
    font-size: 100px;
    font-weight: 200;
    letter-spacing: 10px;
    /* color: rgba(0, 0, 0, 0.5); */
    color: #fff;
    /* text-shadow: 
        0 0 7px #fff,
        0 0 10px #fff,
        0 0 21px #fff,
        0 0 42px var(--light-blue),
        0 0 82px var(--light-blue),
        0 0 92px var(--light-blue),
        0 0 102px var(--light-blue),
        0 0 151px var(--light-blue); */
    animation: flicker 1.5s infinite alternate;
}

/* taken from css-tricks: https://css-tricks.com/how-to-create-neon-text-with-css/#aa-the-flickering-effect */
@keyframes flicker {
    0%, 18%, 22%, 25%, 53%, 57%, 100% {
      text-shadow:
        0 0 4px #fff,
        /* 0 0 11px #fff, */
        /* 0 0 19px #fff, */
        0 0 40px var(--light-blue),
        0 0 80px var(--light-blue),
        0 0 90px var(--light-blue),
        0 0 100px var(--light-blue);
        /*0 0 150px var(--light-blue); */
    }
    20%, 24%, 55% {       
      text-shadow: none;
    }
  }

.cnt-form {
    width: 100%;
    display: flex;
    align-content: center;
    flex-flow: row wrap;
}

.input {
    width: 40%;
    display: flex;
    /* flex-direction: column; */
    flex-flow: column wrap;
    padding: 20px;
}

.form {
    width: 100%;
    background-color: red;
    font-size: 20px;
    box-shadow: 5px 5px 3px var(--black);
}

.form-div {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    padding: 15px;
}

input + span {
    position: relative;
}

input + span::after {
    font-size: 0.7rem;
    position: absolute;
    padding: 5px 10px;
    top: -47px;
}

input:required + span::after {
    color: var(--pale-orange);
    background-color: var(--pink);
    content: "Required";
    right: 10px;
}

input + span::before {
    position: absolute;
    right: -30px;
    top: -33px;
}

input:invalid {
    border: 7px solid var(--light-blue);
}

input:invalid + span::before {
    content: "☢";
    color: black;
    font-size: 35px;
}

input:valid + span::before {
    content: "♥";
    color: greenyellow;
    font-size: 35px;
}